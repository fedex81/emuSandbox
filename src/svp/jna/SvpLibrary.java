package svp.jna;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;
import org.bridj.util.DefaultParameterizedType;

/**
 * Wrapper for library <b>svp</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("svp")
@Runtime(CRuntime.class)
public class SvpLibrary {
	static {
		BridJ.register();
	}
	public static final int SSP_GR0 = 0;
	public static final int SSP_X = 1;
	public static final int SSP_Y = 2;
	public static final int SSP_A = 3;
	public static final int SSP_ST = 4;
	public static final int SSP_STACK = 5;
	public static final int SSP_PC = 6;
	public static final int SSP_P = 7;
	public static final int SSP_PM0 = 8;
	public static final int SSP_PM1 = 9;
	public static final int SSP_PM2 = 10;
	public static final int SSP_XST = 11;
	public static final int SSP_PM4 = 12;
	public static final int SSP_gr13 = 13;
	public static final int SSP_PMC = 14;
	public static final int SSP_AL = 15;
	/** <i>native declaration : ssp16.h</i> */
	public static final int SSP_PMC_HAVE_ADDR = (int)0x0001;
	/** <i>native declaration : ssp16.h</i> */
	public static final int SSP_PMC_SET = (int)0x0002;
	/** <i>native declaration : ssp16.h</i> */
	public static final int SSP_HANG = (int)0x1000;
	/** <i>native declaration : ssp16.h</i> */
	public static final int SSP_WAIT_PM0 = (int)0x2000;
	/** <i>native declaration : ssp16.h</i> */
	public static final int SSP_WAIT_30FE06 = (int)0x4000;
	/** <i>native declaration : ssp16.h</i> */
	public static final int SSP_WAIT_30FE08 = (int)0x8000;
	/** <i>native declaration : ssp16.h</i> */
	public static final int SSP_WAIT_MASK = (int)0xf000;
	/**
	 * Original signature : <code>void ssp1601_reset(ssp1601_t*)</code><br>
	 * <i>native declaration : ssp16.h:91</i>
	 */
	public static void ssp1601_reset(Pointer<ssp1601_t > ssp) {
		ssp1601_reset(Pointer.getPeer(ssp));
	}
	protected native static void ssp1601_reset(@Ptr long ssp);
	/**
	 * Original signature : <code>void ssp1601_run(int)</code><br>
	 * <i>native declaration : ssp16.h:92</i>
	 */
	public static native void ssp1601_run(int cycles);
	/**
	 * Original signature : <code>void svp_cart(cart_hw_t)</code><br>
	 * <i>native declaration : svp.h:28</i>
	 */
	public static native void svp_cart(cart_hw_t cart);
	/**
	 * Original signature : <code>void svp_ssp1601(ssp1601_t)</code><br>
	 * <i>native declaration : svp.h:29</i>
	 */
	public static native void svp_ssp1601(ssp1601_t instance);
	/**
	 * Original signature : <code>void svp_init()</code><br>
	 * <i>native declaration : svp.h:31</i>
	 */
	public static native void svp_init();
	/**
	 * Original signature : <code>void svp_reset()</code><br>
	 * <i>native declaration : svp.h:32</i>
	 */
	public static native void svp_reset();
	/** C type : extern svp_t* */
	public Pointer<svp_t > svp() {
		try {
			return (Pointer<svp_t >) BridJ.getNativeLibrary("svp").getSymbolPointer("svp").as(DefaultParameterizedType.paramType(Pointer.class, svp_t.class)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/** C type : extern svp_t* */
	public SvpLibrary svp(Pointer<svp_t > svp) {
		try {
			{
				BridJ.getNativeLibrary("svp").getSymbolPointer("svp").as(DefaultParameterizedType.paramType(Pointer.class, svp_t.class)).set(svp);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/** C type : extern cart_hw_t */
	public cart_hw_t cart() {
		try {
			return (cart_hw_t) BridJ.getNativeLibrary("svp").getSymbolPointer("cart").as(cart_hw_t.class).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/** C type : extern cart_hw_t */
	public SvpLibrary cart(cart_hw_t cart) {
		try {
			{
				BridJ.getNativeLibrary("svp").getSymbolPointer("cart").as(cart_hw_t.class).set(cart);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/** C type : extern ssp1601_t* */
	public Pointer<ssp1601_t > ssp1601() {
		try {
			return (Pointer<ssp1601_t >) BridJ.getNativeLibrary("svp").getSymbolPointer("ssp1601").as(DefaultParameterizedType.paramType(Pointer.class, ssp1601_t.class)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/** C type : extern ssp1601_t* */
	public SvpLibrary ssp1601(Pointer<ssp1601_t > ssp1601) {
		try {
			{
				BridJ.getNativeLibrary("svp").getSymbolPointer("ssp1601").as(DefaultParameterizedType.paramType(Pointer.class, ssp1601_t.class)).set(ssp1601);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
}
